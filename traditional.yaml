cameras:
    perspective:
        type: perspective
        focal_length: [[16, 2], [17, 2.5], [18, 3], [19, 4], [20, 6]] # pairs of [zoom, focal len]
        vanishing_point: [0, -500] # relative to center of screen, in pixels
        active: true

lights:
    directional1:
        type: directional
        direction: [.1, .5, -1] #[0.1, 0.1, -1]
        diffuse: .2
        ambient: 1.1

scene:
    background:
        color: '#9dc3de'

textures:
    pois:
        url: images/poi_icons_32.png
        filtering: mipmap
        sprites:
            # define sprites: [x origin, y origin, width, height]
            plane: [0, 0, 32, 32]
            tree: [0, 185, 32, 32]
            sunburst: [0, 629, 32, 32]
            restaurant: [0, 777, 32, 32]
            cafe: [0, 814, 32, 32]
            museum: [0, 518, 32, 32]
            bar: [0, 887, 32, 32]
            train: [0, 74, 32, 32]
            bus: [0, 148, 32, 32]
            hospital: [0, 444, 32, 32]
            parking: [0, 1073, 32, 32]
            info: [0, 1110, 32, 32]
            hotel: [0, 259, 32, 32]
            bookstore: [0, 333, 32, 32]

styles:
    flat:
        base: polygons
        lighting: false

    flat_lines:
        base: lines
        lighting: false

    buildings:
        base: polygons
        shaders:
            blocks:
                color: |
                    color.rgb = vec3(min((worldPosition().z*.0005 + .65),.8));

    icons:
        base: points
        texture: pois

sources:
    osm:
        type: TopoJSON
        url:  http://vector.mapzen.com/osm/all/{z}/{x}/{y}.topojson?api_key=vector-tiles-HqUVidw


layers:

    earth:
        data: { source: osm }
        draw:
            polygons:
                style: flat
                order: 0
                color: '#f0ebeb'

    landuse:
        data: { source: osm }
        filter:
            # show smaller landuse areas at higher zooms
            any:
                - { $zoom: { min: 9 }, area: { min: 10000000 } }
                - { $zoom: { min: 10 }, area: { min: 3300000 } }
                - { $zoom: { min: 12 }, area: { min: 1000000 } }
                - { $zoom: { min: 13 }, area: { min: 10000 } }
                - { $zoom: { min: 15 } }
        draw:
            polygons:
                order: 1
                interactive: true
                style: flat
        green:
            filter: { kind: [park, graveyard, cemetery, forest, recreation_ground] }
            draw:
                polygons:
                    order: 2
                    color: '#bddec5'
        blue:
            filter: { kind: [commercial, industrial] }
            draw:
                polygons:
                    color: '#C0CDCD'
        orange:
            filter: { kind: [university] }
            draw:
                polygons:
                    color: '#D9CFC3'

    water:
        data: { source: osm }
        filter:
            any:
                # show smaller water areas at higher zooms
                - { $zoom: { min: 0 }, area: { min: 10000000 } }
                - { $zoom: { min: 10 }, area: { min: 1000000 } }
                - { $zoom: { min: 12 }, area: { min: 100000 } }
                - { $zoom: { min: 15 }, area: { min: 1000 } }
                - { $zoom: { min: 18 } }
        draw:
            polygons:
                interactive: true
                style: flat
                order: 3
                color: '#9dc3de'

    roads:
        data: { source: osm }
        filter:
            not: { kind: [rail] }
        draw:
            lines:
                style: flat_lines
                color: white
                width: 12
                order: function () { return feature.sort_key + 5; }
                outline:
                    color: [[16, '#999'], [18, '#aaa']]
                    width: [[15, 0], [16, 2]]
                    order: 4 # put all outlines below all roads (for now)

        rounded:
            filter: { $zoom: { min: 18 } }
            draw:
                lines:
                    cap: round

        highway:
            filter: { kind: highway }
            draw:
                lines:
                    color: '#D16768'
                    width: [[14, 2px], [15, 12]]
                    outline:
                        width: [[14, 0], [15, 2]]
            link:
                filter: { is_link: yes }
                draw:
                    lines:
                        color: '#aaa'
                        width: [[13, 0], [14, 12]]
        major_road:
            filter: { kind: major_road, $zoom: { min: 10 } }
            draw:
                lines:
                    width: [[10, 0], [13, 2px], [14, 2px], [16, 12]]
                    outline:
                        width: [[16, 0], [17, 1]]
        minor_road:
            filter: { kind: minor_road }
            draw:
                lines:
                    width: [[13, 0px], [14, 1px], [15, 8]]
                    outline:
                        width: [[17, 0], [18, 1]]
        paths:
            filter: { kind: path }
            draw:
                lines:
                    color: '#bbb'
                    width: [[15, 0px], [18, 2px]]
                    outline:
                        width: 0
        ferry:
            filter: { kind: ferry }
            draw:
                lines:
                    color: '#8db3ce'
                    width: [[14, 1px], [18, 2px]]
                    outline:
                        width: 0
        airports:
            filter: { aeroway: true }
            draw:
                lines:
                    color: '#ddd'
                    outline:
                        width: 0

            taxiways:
                filter: { aeroway: taxiway }
                draw:
                    lines:
                        width: [[13, 0px], [14, 2px], [17, 10px]]

            runways:
                filter: { aeroway: runway }
                draw:
                    lines:
                        color: [[13, '#FFE4B5'], [16, white]]
                        width: [[11, 3px], [12, 5px], [13, 10px], [15, 75]]
                        order: 39
                        cap: square
                        outline:
                            color: orange
                            width: [[11, 0px], [12, 1px], [13, 2px], [15, 12.5]]
                            order: 38

        # apply outline to roads intersecting parks - see data source transform example in `sources`
        land:
            filter: { intersects_park: true }
            draw:
                lines:
                    outline:
                        color: yellow
                        width: 2px

    buildings:
        data: { source: osm }
        filter: { $zoom: { min: 14 } }

        draw:
            polygons:
                order: 50
                color: [.65, .65, .65]

        # turn interactive feature selection on for buildings with names
        interactive:
            filter: { name: true }
            draw: { polygons: { interactive: true } }

        # extrude 3d buildings
        extruded:
            filter: { $zoom: { min: 15 } }
            draw:
                polygons:
                    style: buildings
                    extrude: function () { return feature.height > 20 || $zoom >= 16; }

        high-line:
            filter: { roof_material: grass }
            draw:
                polygons:
                    style: flat
                    color: '#bddec5'

    road_labels:
        data: { source: osm, layer: roads }
        filter: { name: true, aeroway: false, tunnel: false, railway: false, not: { kind: rail }, $zoom: { min: 10 } }
        highway:
            filter: { kind: highway, $zoom: { min: 7 } }
            draw:
                text:
                    priority: 2
                    font:
                        fill: '#666'
                        family: Helvetica
                        size: 12px
                        stroke: { color: white, width: 4 }

        not_highway:
            filter: { not: { kind: highway }, $zoom: { min: 13 } }
            draw:
                text:
                    priority: 5
                    font:
                        fill: '#666'
                        stroke: { color: white, width: 4 }
                        family: Helvetica
                        size: 12px

            major_road:
                filter: { kind: major_road, $zoom: { min: 14 } }
                draw:
                    text:
                        priority: 3
                        font:
                            family: Helvetica
                            size: 16px
                            stroke: { color: white, width: 4 }

            ferry:
                filter: { kind: ferry }
                draw:
                    text:
                        text_wrap: 20
                        font:
                            fill: '#8db3ce'
                            stroke: { color: white, width: 4px }
                            style: italic
                            size: 12px

            small:
                filter: { highway: [residential, unclassified], $zoom: { max: 15 } }
                visible: false

    poi_icons:
        data: { source: osm, layer: pois }
        filter: { name: true, not: { kind: [peak, viewpoint, bicycle_rental, car_sharing] }, $zoom: { min: 15 } }
        draw:
            points:
                visible: false # turn on for debug
                color: red
                size: 8px
            icons:
                # anchor: top
                offset: [0, -8px] # replace w/anchor when 0.4.1 released
                size: [[13, 12px], [15, 18px]]
                interactive: true

        # add generic icon at high zoom
        generic:
            filter: { $zoom: { min: 18 } }
            draw: { icons: { sprite: info } }

        # examples of different icons mapped to feature properties
        icons:
            restaurant:
                filter: { kind: [restaurant] }
                draw: { icons: { sprite: restaurant } }
            cafe:
                filter: { kind: [cafe, convenience] }
                draw: { icons: { sprite: cafe } }
            bar:
                filter: { kind: [bar, pub] }
                draw: { icons: { sprite: bar } }
            culture:
                filter: { kind: [museum, library, church, place_of_worship, bank] }
                draw: { icons: { sprite: museum } }
            station:
                filter: { kind: [station] }
                draw: { icons: { sprite: train } }
            hospital:
                filter: { kind: [hospital, pharmacy] }
                draw: { icons: { sprite: hospital } }
            hotel:
                filter: { kind: [hotel, hostel] }
                draw: { icons: { sprite: hotel } }
            bus_stop:
                filter: { kind: [bus_stop] }
                draw: { icons: { sprite: bus } }
            bookstore:
                filter: { kind: [bookstore] }
                draw: { icons: { sprite: bookstore } }

    places:
        data: { source: osm }
        filter:
            name: true
            not: { kind: [county, state, island] }
            any:
                - { $zoom: { min: 1 }, kind: ocean }
                - { $zoom: { min: 2, max: 5 }, kind: continent }
                # important countries
                - { $zoom: { min: 4 }, name: ["United States of America", "Brasil", " Россия", "中华人民共和国"] }
                # unimportant countries
                - { $zoom: { min: 5 }, kind: country }
                # this function matches the "cities" sublayer
                - function() { return (feature.scalerank * .75) <= ($zoom - 4); }
        draw:
            text:
                priority: 1
                font:
                    family: Helvetica
                    size: 11pt
                    style: italic
                    transform: uppercase
                    fill: black
                    stroke: { color: white, width: 3 }
        continents:
            filter: { kind: continent }
            draw:
                text:
                    font:
                        transform: uppercase
        countries:
            filter: { kind: country }
            draw:
                text:
                    font:
                        transform: uppercase
        oceans:
            filter: { kind: ocean }
            draw:
                text:
                    font:
                        family: Baskerville
                        size: 14pt
                        style: italic

        cities:
            # this filter shows lower scaleranks at higher zooms, starting at z4
            filter: function() { return (feature.scalerank * .75) <= ($zoom - 4); }
            draw:
                text:
                    font:
                        family: Helvetica
                        size: 14px
                        style: normal
                        fill: black
                        stroke: { color: white, width: 3 }

        minor-places:
            filter: { kind: [hamlet, village, town, neighbourhood, suburb, quarter], $zoom: { max: 14 } }
            visible: false

    point_labels:
        data: { source: osm, layer: [pois, landuse] }
        filter:
            name: true

        landuse:
            filter:
                $layer: landuse
                $geometry: point
                label_placement: yes
                kind: [park, forest, cemetery, graveyard]
                any:
                    # show labels for smaller landuse areas at higher zooms
                    - { $zoom: { min: 9 }, area: { min: 100000000 } }
                    - { $zoom: { min: 10 }, area: { min: 10000000 } }
                    - { $zoom: { min: 12 }, area: { min: 1000000 } }
                    - { $zoom: { min: 15 }, area: { min: 10000 } }
                    - { $zoom: { min: 18 } }
            draw:
                text:
                    priority: 4
                    font:
                        family: Lucida Grande
                        size: 10pt
                        style: italic
                        fill: darkgreen
                        stroke: { color: white, width: 3 }

        pois:
            filter:
                $layer: pois
                name: true
                not: { kind: [peak, viewpoint, bicycle_rental, car_sharing] }
                $zoom: { min: 18 }
            draw:
                text:
                    anchor: bottom
                    # align: left
                    offset: [0, 2px]
                    move_into_tile: false
                    priority: 6
                    font:
                        family: Helvetica
                        size: 12px
                        fill: black
